#define INSTRUMENT_NONE   0
#define PULSE1            1
#define PULSE2            2
#define TRIANGLE          3
#define NOISE             4
#define SAMPLE            5

class NoteCell {
    U8 note;      // MIDI note number
    U8 velocity;  // Volume/Intensity
    U8 instrument;
    U8 effect;    // Future expansion for effects
};

#define TRACK_LENGTH 13  // Length of each pattern in rows
class Pattern {
    NoteCell cells[TRACK_LENGTH];
};

#define MAX_PATTERNS 64  // Maximum patterns in a song
class Song {
    U8 patternOrder[MAX_PATTERNS]; // Which pattern is played when
    Pattern patterns[MAX_PATTERNS]; 
};


class WAVHeader {
    U8  riff[4];        // RIFF string
    U32 overall_size;   // overall size of file in bytes
    U8  wave[4];        // WAVE string
    U8  fmt_chunk[4];   // fmt string with trailing null char
    U32 length;         // length of format data. Should be 16 for PCM
    U16 format_type;    // format type. 1 for PCM
    U16 channels;       // number of channels
    U32 sample_rate;    // sampling rate (blocks per second)
    U32 byterate;       // SampleRate * NumChannels * BitsPerSample/8
    U16 block_align;    // channels * bits/sample / 8
    U16 bits_per_sample;// bits per sample, 8- 8bits, 16- 16 bits etc
};


#define SAMPLE_RATE 44100
#define PI 3.1415926535897932 // i know i can just use the pi symbol

// globals
U8 *gSampleData = NULL;  // Global sample buffer
I64 gSampleSize = 0;     // Size of the loaded sample

U0 CleanupWaveformGen() {
    if (gSampleData) {
        Free(gSampleData);
        gSampleData = NULL;  // Reset the pointer
    }
}
